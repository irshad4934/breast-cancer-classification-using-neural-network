# -*- coding: utf-8 -*-
"""Exploratory Data Analysis (EDA) - use case.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BMIATdCrdyu_gHykmbvXXPai1U_dznqo

**Exploratory Data Analysis (EDA):**

Exploratory Data Analysis is all about analyzing the dataset and summarizing the key insights and characteristics of the data.

**EDA checklist:**
1.	Understanding the dataset, and its shape
2.	Checking the data type of each columns	
3.	Categorical & Numerical columns
4.  Checking for missing values
5.	Descriptive summary of the dataset
6.	Groupby for classification problems

#Importing the Dependencies
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import LabelEncoder

"""# Data Collection"""

# loading the breast cancer dataset from csv file to pandas data frame
breast_cancer_data = pd.read_csv('/content/data.csv')

"""# Exploratory Data Analysis"""

# printing the first five rows of the dataframe
breast_cancer_data.head()

# removing the unnamed column
breast_cancer_data.drop(columns='Unnamed: 32', axis = 1, inplace=True)

breast_cancer_data.head()

breast_cancer_data.shape

# checking the data types
breast_cancer_data.info()

# removing the id column
breast_cancer_data.drop(columns='id', axis=1, inplace=True)

"""Diagnosis column is a CATEGORICAL columnm whereas remIning are continuous values"""

# checking for missing values
breast_cancer_data.isnull().sum()

"""As we can see, the dataset has no missing values

Statistical summary of the data - Descriptive Statistics
"""

breast_cancer_data.describe()

"""Check whether mean & median (50th Percentile) are close to each other

Checking the distribution of target Variable
"""

breast_cancer_data['diagnosis'].value_counts()

# encoding the target column 
label_encode = LabelEncoder()

labels = label_encode.fit_transform(breast_cancer_data['diagnosis'])

breast_cancer_data['target'] = labels

breast_cancer_data.drop(columns='diagnosis', axis=1, inplace=True)

# diagnosis column removed
breast_cancer_data.head()

breast_cancer_data['target'].value_counts()

"""Benign --> 0

Malignant --> 1

There is a slight imbalance in the data. But it is fine in this case

Grouping the data based on the target
"""

breast_cancer_data.groupby('target').mean()

"""Inference: We can clearly see that for most of the features, the mean values are higher for Malignant(1) cases and lower for Benign(0) cases

**Summary from EDA:** 
1. No missing Values
2. All are continuous numerical values except for Target column
3. Mean is slightly more than the median for most of the features. So it is right skewed.
4. Slight imbalance in the dataset (Benign(0) cases are more than Malignant(1) cases
5. Mean of most features are clearly larger for Malignant cases compared to the benign cases (Groupby)
"""

